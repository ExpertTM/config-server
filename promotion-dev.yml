resilience4j:
  circuitbreaker:
    circuit-breaker-aspect-order: 1
    configs:
      default:
        sliding-window-type: COUNT_BASED
        sliding-window-size: 5
        failure-rate-threshold: 50
        minimum-number-of-calls: 2
        wait-duration-in-open-state:
          seconds: 5
        permitted-number-of-calls-in-half-open-state: 3
        event-consumer-buffer-size: 20
        record-exceptions:
          - ru.javaguru.jdmik7.promotion.exception.AccountingTooManyRequestsException
          - ru.javaguru.jdmik7.promotion.exception.AccountingServiceUnavailableException
          - java.net.SocketTimeoutException
        ignore-exceptions:
          - ru.javaguru.jdmik7.promotion.exception.AccountingNotFoundException
          - ru.javaguru.jdmik7.promotion.exception.AccountingBadRequestException
    instances:
      accounting-service:
        base-config: default
      security-service:
        base-config: default
      profiler-service:
        base-config: default
  retry:
    retry-aspect-order: 2
    configs:
      default:
        max-attempts: 3
        wait-duration: 10s
        exponential-backoff-multiplier: 2
        enable-exponential-backoff: true
        retry-exceptions:
          - ru.javaguru.jdmik7.promotion.exception.AccountingTooManyRequestsException
          - ru.javaguru.jdmik7.promotion.exception.AccountingServiceUnavailableException
          - java.net.SocketTimeoutException
        ignore-exceptions:
          - io.github.resilience4j.circuitbreaker.CallNotPermittedException  
    instances:
      accounting-service:
        base-config: default
      security-service:
        base-config: default
      profiler-service:
        base-config: default

management:
  endpoints:
    web:
      exposure:
        include: mapping, bus-refresh, bus-env, health, circuitbreakerevents, retry
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
  health:
    circuitbreakers:
      enabled: true
